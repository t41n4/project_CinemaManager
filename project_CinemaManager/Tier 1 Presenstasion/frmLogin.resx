<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        urH36lqz+P/RYcY8iEcmSwAAAABJRU5ErkJggg==
</value>
  </data>
</root>